#!/bin/bash
reset

#--------------------------------------------------------------------------------------
# QuestaSim Tool
export MTI_HOME=/tools/mentor/questasim-2023.4
export PATH=/home/thanhdo/questasim/linux_x86_64/:$PATH

# NC Tool
export PATH=$PATH:/tools/cadence/XCELIUMX/CELIUM21.03/tools.lnx86/bin

# License
export LM_LICENSE_FILE=/home/thanhdo/questasim/LICENSE.dat

#--------------------------------------------------------------------------------------
# UVM HOME
# UVMLIB=uvm-1.1d
export UVM_HOME=/home/thanhdo/Downloads/UVM_Training/dti_uart/sim/libs/uvm-1.1d

# Generate uvm lib
ccflags_dyn="-fPIC"
ldflags_dyn="-shared"
echo "c++ -Wno-deprecated ${ccflags_dyn} ${ldflags_dyn} -DQUESTA -I ${MTI_HOME}/include -o uvm_dpi.so ${UVM_HOME}/src/dpi/uvm_dpi.cc"
c++ -Wno-deprecated ${ccflags_dyn} ${ldflags_dyn} -DQUESTA -I ${MTI_HOME}/include -o uvm_dpi.so ${UVM_HOME}/src/dpi/uvm_dpi.cc

# export TEST_NAME="dti_uart_base_test" # Test name for running simulation with UVM

TOP_TB=Sub_top_MB_CONV_tb # name top testbench

#--------------------------------------------------------------------------------------
# Prepare workspace
alias vlb='reset; rm -rf work; mkdir -p log; rm -rf log/*; vlib work'
alias vlgr='vlog -64 -f filelist_com.f -f filelist_rtl.f +cover=bcefs -l ./log/vlogr.log'
alias vlgt='vlog -64 -f filelist_com.f -f filelist_vsim.f -f filelist_tb.f -l ./log/vlogt.log'
# Compile VHDL files using vcom
# alias vcv='vcom -2008 -f filelist_vhd.f -l ./log/vcom.log'
# alias vcv='vcom -2008 -f filelist_vhd.f -l ./log/vcom.log -work /home/phuong/DigitalDesign/EDABK_Resnet50_GEMM_16x16/Hardware/hdl/blk_mem_gen_v8_4_7'

# Compile rtl and testbench
alias vlg='vlgr; vlgt'


# Run simulation without UVM lib
alias vsm='vsim -64 -c ${TOP_TB} -wlf vsim.wlf -solvefaildebug -assertdebug -sva -coverage -voptargs=+acc -l ./log/vsim.log -do "coverage save -onexit -assert -code bcefs -directive -cvg coverage.ucdb; add wave -r /${TOP_TB}/*; run -all; quit"'

alias run='vlb;vlg;vsm'

alias vsm_opt='vsim -64 -c ${TOP_TB} -solvefaildebug -assertdebug -sva -coverage -voptargs=+acc -l ./log/vsim.log -do "coverage save -onexit -assert -code bcefs -directive -cvg coverage.ucdb; run -all; quit"'

#--------------------------------------------------------------------------------------
# View wave form
alias viw='vsim -view vsim.wlf -do wave.do &'

# View coverage
alias viwcov='vsim -viewcov coverage.ucdb &'

# Custom script to run tb  
alias gen_sti='python3 ../sw/code_gen/gen_stimulus_v2.py'
alias source_compare_file='source compare_outputs.sh'



alias run_tb0='python3 ../sw/code_gen/auto_gen_ifm_weight_bram_golden_output.py --ifm_shape 7x7x64 --kernel_shape 3x3x64x32 --stride 1x1 --padding 0; \
vlb; vlg; \
vsim -64 -c ${TOP_TB} -wlf vsim.wlf \
+INPUT_SIZE=7 +KERNEL_SIZE=3 +STRIDE=1 \
+CHANNEL_NUM=64 +FILTER_NUM=32 +PADDING=0 \
-solvefaildebug -assertdebug -sva -coverage -voptargs=+acc -l ./log/vsim.log \
-do "coverage save -onexit -assert -code bcefs -directive -cvg coverage.ucdb; add wave -r /${TOP_TB}/*; run -all; quit"; \
source_compare_file'

alias run_tb0_padding='python3 ../sw/code_gen/auto_gen_ifm_weight_bram_golden_output.py --ifm_shape 7x7x64 --kernel_shape 3x3x64x32 --stride 1x1 --padding 1; \
vlb; vlg; \
vsim -64 -c ${TOP_TB} -wlf vsim.wlf \
+INPUT_SIZE=7 +KERNEL_SIZE=3 +STRIDE=1 \
+CHANNEL_NUM=64 +FILTER_NUM=32 +PADDING=1 \
-solvefaildebug -assertdebug -sva -coverage -voptargs=+acc -l ./log/vsim.log \
-do "coverage save -onexit -assert -code bcefs -directive -cvg coverage.ucdb; add wave -r /${TOP_TB}/*; run -all; quit"; \
source_compare_file'


alias test_run='bash -c "\
python3 ../Fused-Block-CNN/address/gen_random_ifm_weight.py --ifm_height \$1 --ifm_width \$2 --ifm_channel \$3 --weight_height \$4 --weight_width \$5 --weight_filter \$6 --padding \$7; \
python3 ../Fused-Block-CNN/address/gen_tf.py --ifm_height \$1 --ifm_width \$2 --ifm_channel \$3 --weight_height \$4 --weight_width \$5 --weight_filter \$6 --padding \$7 --stride \$8; \
python3 ../Fused-Block-CNN/address/extract_weight_tile.py --pe 16 --filter_count \$6 --weight_height \$4 --weight_channel \$3; \
python3 ../Fused-Block-CNN/address/extract_ofm_tile.py --pe 16 --ofm_channel \$6 --ofm_height \$(( (\$1 - \$4 + 2 * \$7) / \$8 + 1 )); \
python3 ../Fused-Block-CNN/address/change_ofm.py --ofm_width \$(( (\$2 - \$5 + 2 * \$7) / \$8 + 1 )) --max_pe 16 --weight_filter \$6" --
vlb; vlg; \
vsim -64 -c ${TOP_TB} -wlf vsim.wlf \
+IFM_W_layer1_para=\$1 \
+IFM_C_layer1_para=\$3 \
+KERNEL_W_layer1_para=\$4 \
+OFM_C_layer1_para=\$6 \
+Stride_para=\$8 +OFM_C_layer2_para=16 \
-solvefaildebug -assertdebug -sva -coverage -voptargs=+acc -l ./log/vsim.log \
-do "coverage save -onexit -assert -code bcefs -directive -cvg coverage.ucdb; add wave -r /${TOP_TB}/*; run -all; quit"; \'

alias py_run='bash -c "\
python3 ../Fused-Block-CNN/address/gen_random_ifm_weight.py --ifm_height \$1 --ifm_width \$2 --ifm_channel \$3 --weight_height \$4 --weight_width \$5 --weight_filter \$6 --padding \$7; \
python3 ../Fused-Block-CNN/address/gen_tf.py --ifm_height \$1 --ifm_width \$2 --ifm_channel \$3 --weight_height \$4 --weight_width \$5 --weight_filter \$6 --padding \$7 --stride \$8; \
python3 ../Fused-Block-CNN/address/extract_weight_tile.py --pe 16 --filter_count \$6 --weight_height \$4 --weight_channel \$3; \
python3 ../Fused-Block-CNN/address/extract_ofm_tile.py --pe 16 --ofm_channel \$6 --ofm_height \$(( (\$1 - \$4 + 2 * \$7) / \$8 + 1 )); \
python3 ../Fused-Block-CNN/address/change_ofm.py --ofm_width \$(( (\$2 - \$5 + 2 * \$7) / \$8 + 1 )) --max_pe 16 --weight_filter \$6" --'


alias py_run_padding='bash -c "\
python3 ../Fused-Block-CNN/address/gen_random_ifm_weight.py --ifm_height \$1 --ifm_width \$2 --ifm_channel \$3 --weight_height \$4 --weight_width \$5 --weight_filter \$6 --padding \$7; \
python3 ../Fused-Block-CNN/address/gen_tf.py --ifm_height \$1 --ifm_width \$2 --ifm_channel \$3 --weight_height \$4 --weight_width \$5 --weight_filter \$6 --padding \$7 --stride \$8; \
ofm_h=\$(( (\$1 - \$4 + 2 * \$7) / \$8 + 1 ))
python3 ../Fused-Block-CNN/address/Add_padding.py --ifm_height \${ofm_h} --ifm_width \${ofm_h} --ifm_channel \$6 --padding 1" --'

alias py_run1='bash -c "\
python3 ../Fused-Block-CNN/address/gen_random_ifm_weight.py --ifm_height \$1 --ifm_width \$2 --ifm_channel \$3 --weight_height \$4 --weight_width \$5 --weight_filter \$6 --padding \$7; \
python3 ../Fused-Block-CNN/address/gen_tf.py --ifm_height \$1 --ifm_width \$2 --ifm_channel \$3 --weight_height \$4 --weight_width \$5 --weight_filter \$6 --padding \$7 --stride \$8; \
python3 ../Fused-Block-CNN/address/extract_weight_tile.py --pe 16 --filter_count \$6 --weight_height \$4 --weight_channel \$3; \
python3 ../Fused-Block-CNN/address/extract_ofm_tile.py --pe 16 --ofm_channel \$6 --ofm_height \$(( (\$1 - \$4 + 2 * \$7) / \$8 + 1 )); \
python3 ../Fused-Block-CNN/address/change_ofm.py --ofm_width \$(( (\$2 - \$5 + 2 * \$7) / \$8 + 1 )) --max_pe 16 --weight_filter \$6" --'

alias gen_dw='bash -c "\
python3 ../Fused-Block-CNN/address/DW/gen_random_ifm_weight_DW.py \
  --ifm_height \$1 --ifm_width \$2 --ifm_channel \$3 \
  --weight_height \$4 --weight_width \$5 --weight_filter \$6 --padding \$7; \

python3 ../Fused-Block-CNN/address/DW/gen_tf_dw.py \
  --ifm_height \$1 --ifm_width \$2 --ifm_channel \$3 \
  --weight_height \$4 --weight_width \$5 --depth_multiplier \$6 \
  --padding \$7 --stride \$8; \

python3 ../Fused-Block-CNN/address/DW/extract_weight_tile_dw.py \
  --pe 4 --filter_count \$6 --weight_height \$4 --weight_channel \$3; \

ofm_h=\$(( (\$1 - \$4 + 2 * \$7) / \$8 + 1 ))
python3 ../Fused-Block-CNN/address/DW/extract_ofm_tile_DW.py \
  --pe 4 --ofm_channel \$3 --ofm_height \${ofm_h}
python3 ../Fused-Block-CNN/address/DW/change_ofm_DW.py --ofm_channel \$3 --ofm_width \$(( (\$2 - \$5 + 2 * \$7) / \$8 + 1 )) --max_pe 4 --weight_filter \$6" --'



alias py_run_2layers='bash -c "\
python3 ../Fused-Block-CNN/address/golden_5layers_folder/gen_random_ifm_weight_2layer.py --ifm_height \$1 --ifm_width \$2 --ifm_channel \$3 --weight_height \$4 --weight_width \$5 --weight_filter \$6 --padding1 \$7 --weight_height_2 \$9 --weight_width_2 \${10} --weight_filter_2 1; \		
python3 ../Fused-Block-CNN/address/golden_5layers_folder/gen_tf.py --ifm_height \$1 --ifm_width \$2 --ifm_channel \$3 --weight_height \$4 --weight_width \$5 --weight_filter \$6 --padding1 \$7 --stride1 \$8; \
ofm_h1=\$(( (\$1 - \$5 + 2 * \$7) / \$8 + 1 ))
python3 ../Fused-Block-CNN/address/golden_5layers_folder/gen_tf_dw.py --ifm_height \${ofm_h1} --ifm_width \${ofm_h1} --ifm_channel \$6 --weight_height \$9 --weight_width \${10} --depth_multiplier 1 --padding2 \${12} --stride2 \${13}; \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/extract_weight_tile.py --pe 16 --filter_count \$6 --weight_height \$4 --weight_channel \$3; \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/extract_weight_tile_dw.py --pe 4 --filter_count \${11} --weight_height \$9 --weight_channel \$6; \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/extract_ofm_tile.py --pe 16 --ofm_channel \$6 --ofm_height \$(( (\$1 - \$4 + 2 * \$7) / \$8 + 1 )); \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/extract_ofm_tile_dw.py --pe 4 --ofm_channel \$6 --ofm_height \$(( (\${ofm_h1} - \${10} + 2 * \${12}) / \${13} + 1 )); \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/change_ofm.py --ofm_width \${ofm_h1} --max_pe 16 --weight_filter \$6; \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/change_ofm_DW.py --ofm_width \$(( (\${ofm_h1} - \${10} + 2 * \${12}) / \${13} + 1 )) --max_pe 4 --ofm_channel \$6" --'
alias py_run_2layers_stride2='bash -c "\
python3 ../Fused-Block-CNN/address/golden_5layers_folder/gen_random_ifm_weight_2layer.py --ifm_height \$1 --ifm_width \$2 --ifm_channel \$3 --weight_height \$4 --weight_width \$5 --weight_filter \$6 --padding1 \$7 --weight_height_2 \$9 --weight_width_2 \${10} --weight_filter_2 1; \		
python3 ../Fused-Block-CNN/address/golden_5layers_folder/gen_tf.py --ifm_height \$1 --ifm_width \$2 --ifm_channel \$3 --weight_height \$4 --weight_width \$5 --weight_filter \$6 --padding1 \$7 --stride1 \$8; \
ofm_h1=\$(( (\$1 - \$4 + 2 * \$7) / \$8 + 1 ))
python3 ../Fused-Block-CNN/address/golden_5layers_folder/gen_tf_dw.py --ifm_height \${ofm_h1} --ifm_width \${ofm_h1} --ifm_channel \$6 --weight_height \$9 --weight_width \${10} --depth_multiplier 1 --padding2 \${12} --stride2 \${13}; \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/extract_weight_tile.py --pe 16 --filter_count \$6 --weight_height \$4 --weight_channel \$3; \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/extract_weight_tile_dw.py --pe 4 --filter_count \${11} --weight_height \$9 --weight_channel \${6}; \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/extract_ofm_tile.py --pe 16 --ofm_channel \$6 --ofm_height \$(( (\$1 - \$4 + 2 * \$7) / \$8 + 1 )); \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/process_stride_2.py --weight_filter \$6 --ofm_width \$(( (\${ofm_h1} - \${10} + 2 * \${12}) / \${13} + 1 )); \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/gen_tf_pooling.py --ifm_height \$(( (\${ofm_h1} - \${10} + 2 * \${12}) / 2  + 1 )) --ifm_width \$(( (\${ofm_h1} - \${10} + 2 * \${12}) / 2 + 1 )) --ifm_channel \$6; \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/extract_ofm_tile_dw.py --pe 4 --ofm_channel \$6 --ofm_height \$(( (\${ofm_h1} - \${10} + 2 * \${12}) /2 + 1 )); \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/change_ofm.py --ofm_width \${ofm_h1} --max_pe 16 --weight_filter \$6; \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/change_ofm_DW.py --ofm_width \$(( (\${ofm_h1} - \${10} + 2 * \${12}) / 2 + 1 )) --max_pe 4 --ofm_channel \$6" --'


alias py_run_5layers='bash -c "\
python3 ../Fused-Block-CNN/address/golden_5layers_folder/gen_random_ifm_weight_2layer.py --ifm_height \$1 --ifm_width \$2 --ifm_channel \$3 --weight_height \$4 --weight_width \$5 --weight_filter \$6 --padding1 \$7 --weight_height_2 \$9 --weight_width_2 \${10} --weight_filter_2 1; \		
python3 ../Fused-Block-CNN/address/golden_5layers_folder/gen_tf.py --ifm_height \$1 --ifm_width \$2 --ifm_channel \$3 --weight_height \$4 --weight_width \$5 --weight_filter \$6 --padding1 \$7 --stride1 \$8; \
ofm_h1=\$(( (\$1 - \$4 + 2 * \$7) / \$8 + 1 ))
python3 ../Fused-Block-CNN/address/golden_5layers_folder/gen_tf_dw.py --ifm_height \${ofm_h1} --ifm_width \${ofm_h1} --ifm_channel \$6 --weight_height \$9 --weight_width \${10} --depth_multiplier 1 --padding2 \${12} --stride2 \${13}; \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/extract_weight_tile.py --pe 16 --filter_count \$6 --weight_height \$4 --weight_channel \$3; \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/extract_weight_tile_dw.py --pe 4 --filter_count \${11} --weight_height \$9 --weight_channel \${6}; \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/extract_weight_tile_4.py --pe 4 --filter_count 12 --weight_height 1 --weight_channel 192; \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/extract_weight_tile_5.py --pe 4 --filter_count 192 --weight_height 2 --weight_channel 12; \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/extract_ofm_tile.py --pe 16 --ofm_channel \$6 --ofm_height \$(( (\$1 - \$4 + 2 * \$7) / \$8 + 1 )); \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/extract_ofm_tile_dw.py --pe 4 --ofm_channel \$6 --ofm_height \$(( (\${ofm_h1} - \${10} + 2 * \${12}) /2 + 1 )); \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/process_stride_2.py --weight_filter \$6 --ofm_width \$(( (\${ofm_h1} - \${10} + 2 * \${12}) / \${13} + 1 )); \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/gen_tf_pooling.py --ifm_height \$(( (\${ofm_h1} - \${10} + 2 * \${12}) / 2  + 1 )) --ifm_width \$(( (\${ofm_h1} - \${10} + 2 * \${12}) / 2 + 1 )) --ifm_channel \$6; \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/gen_tf_layer_4.py --ifm_height 1 --ifm_width 1 --ifm_channel 192 --weight_height 1 --weight_width 1 --weight_filter 12 --padding1 0 --stride1 1; \	
python3 ../Fused-Block-CNN/address/golden_5layers_folder/gen_tf_layer_5.py --ifm_height 1 --ifm_width 1 --ifm_channel 12 --weight_height 1 --weight_width 1 --weight_filter 192 --padding1 0 --stride1 1; \	
python3 ../Fused-Block-CNN/address/golden_5layers_folder/extract_ofm_tile_4.py --pe 4 --ofm_channel 12 --ofm_height 1; \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/extract_ofm_tile_5.py --pe 4 --ofm_channel 192 --ofm_height 1; \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/change_ofm.py --ofm_width \${ofm_h1} --max_pe 16 --weight_filter \$6; \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/change_ofm_4.py --ofm_width 1 --max_pe 4 --weight_filter 12; \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/change_ofm_5.py --ofm_width 1 --max_pe 4 --weight_filter 192; \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/change_ofm_DW.py --ofm_width \$(( (\${ofm_h1} - \${10} + 2 * \${12}) / 2 + 1 )) --max_pe 4 --ofm_channel \$6" --'
alias py_run_5layers='bash -c "\
python3 ../Fused-Block-CNN/address/golden_5layers_folder/gen_random_ifm_weight_2layer.py --ifm_height \$1 --ifm_width \$2 --ifm_channel \$3 --weight_height \$4 --weight_width \$5 --weight_filter \$6 --padding1 \$7 --weight_height_2 \$9 --weight_width_2 \${10} --weight_filter_2 1; \		
python3 ../Fused-Block-CNN/address/golden_5layers_folder/gen_tf.py --ifm_height \$1 --ifm_width \$2 --ifm_channel \$3 --weight_height \$4 --weight_width \$5 --weight_filter \$6 --padding1 \$7 --stride1 \$8; \
ofm_h1=\$(( (\$1 - \$4 + 2 * \$7) / \$8 + 1 ))
python3 ../Fused-Block-CNN/address/golden_5layers_folder/gen_tf_dw.py --ifm_height \${ofm_h1} --ifm_width \${ofm_h1} --ifm_channel \$6 --weight_height \$9 --weight_width \${10} --depth_multiplier 1 --padding2 \${12} --stride2 \${13}; \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/extract_weight_tile.py --pe 16 --filter_count \$6 --weight_height \$4 --weight_channel \$3; \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/extract_weight_tile_dw.py --pe 4 --filter_count \${11} --weight_height \$9 --weight_channel \${6}; \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/extract_weight_tile_4.py --pe 4 --filter_count 12 --weight_height 1 --weight_channel 192; \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/extract_weight_tile_5.py --pe 4 --filter_count 192 --weight_height 2 --weight_channel 12; \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/extract_ofm_tile.py --pe 16 --ofm_channel \$6 --ofm_height \$(( (\$1 - \$4 + 2 * \$7) / \$8 + 1 )); \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/extract_ofm_tile_dw.py --pe 4 --ofm_channel \$6 --ofm_height \$(( (\${ofm_h1} - \${10} + 2 * \${12}) /2 + 1 )); \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/process_stride_2.py --weight_filter \$6 --ofm_width \$(( (\${ofm_h1} - \${10} + 2 * \${12}) / \${13} + 1 )); \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/gen_tf_pooling.py --ifm_height \$(( (\${ofm_h1} - \${10} + 2 * \${12}) / 2  + 1 )) --ifm_width \$(( (\${ofm_h1} - \${10} + 2 * \${12}) / 2 + 1 )) --ifm_channel \$6; \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/gen_tf_layer_4.py --ifm_height 1 --ifm_width 1 --ifm_channel 192 --weight_height 1 --weight_width 1 --weight_filter 12 --padding1 0 --stride1 1; \	
python3 ../Fused-Block-CNN/address/golden_5layers_folder/gen_tf_layer_5.py --ifm_height 1 --ifm_width 1 --ifm_channel 12 --weight_height 1 --weight_width 1 --weight_filter 192 --padding1 0 --stride1 1; \	
python3 ../Fused-Block-CNN/address/golden_5layers_folder/extract_ofm_tile_4.py --pe 4 --ofm_channel 12 --ofm_height 1; \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/extract_ofm_tile_5.py --pe 4 --ofm_channel 192 --ofm_height 1; \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/change_ofm.py --ofm_width \${ofm_h1} --max_pe 16 --weight_filter \$6; \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/change_ofm_4.py --ofm_width 1 --max_pe 4 --weight_filter 12; \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/change_ofm_5.py --ofm_width 1 --max_pe 4 --weight_filter 192; \
python3 ../Fused-Block-CNN/address/golden_5layers_folder/change_ofm_DW.py --ofm_width \$(( (\${ofm_h1} - \${10} + 2 * \${12}) / 2 + 1 )) --max_pe 4 --ofm_channel \$6" --'

alias py_run_2layers_fused='bash -c "\
python3 ../Fused-Block-CNN/address/golden_2block_fused/gen_random_ifm_weight_2layer.py --ifm_height \$1 --ifm_width \$2 --ifm_channel \$3 --weight_filter_1 \$4 --weight_filter_2 \$5 --weight_filter_3 \$6 --weight_filter_4 \$7; \
python3 ../Fused-Block-CNN/address/golden_2block_fused/gen_tf_3x3_1.py --ifm_height \$1 --ifm_width \$2 --ifm_channel \$3 --weight_filter \$4 --padding1 \$8 --stride1 \$9; \
ofm_h1=\$(( (\$1 - 3 + 2 * \$8) / \$9 + 1 )); \
python3 ../Fused-Block-CNN/address/golden_2block_fused/gen_tf_1x1_1.py --ifm_height \${ofm_h1} --ifm_width \${ofm_h1} --ifm_channel \$4 --weight_filter \$5 --padding1 0 --stride1 1; \
ofm_h2=\${ofm_h1}; \
python3 ../Fused-Block-CNN/address/golden_2block_fused/gen_tf_3x3_2.py --ifm_height \${ofm_h2} --ifm_width \${ofm_h2} --ifm_channel \$5 --weight_filter \$6 --padding1 \${10} --stride1 \${11}; \
ofm_h3=\$(( (\${ofm_h2} - 3 + 2 * \${10}) / \${11} + 1 )); \
python3 ../Fused-Block-CNN/address/golden_2block_fused/gen_tf_1x1_2.py --ifm_height \${ofm_h3} --ifm_width \${ofm_h3} --ifm_channel \$6 --weight_filter \$7 --padding1 0 --stride1 1; \
\
python3 ../Fused-Block-CNN/address/golden_2block_fused/extract_weight_tile_3x3_1.py --pe 16 --filter_count \$4 --weight_channel \$3; \
python3 ../Fused-Block-CNN/address/golden_2block_fused/extract_weight_tile_1x1_1.py --pe 4 --filter_count \$5 --weight_channel \$4; \
python3 ../Fused-Block-CNN/address/golden_2block_fused/extract_weight_tile_3x3_2.py --pe 16 --filter_count \$6 --weight_channel \$5; \
python3 ../Fused-Block-CNN/address/golden_2block_fused/extract_weight_tile_1x1_2.py --pe 4 --filter_count \$7 --weight_channel \$6; \
\
python3 ../Fused-Block-CNN/address/golden_2block_fused/extract_ofm_tile_3x3_1.py --pe 16 --ofm_channel \$4 --ofm_height \${ofm_h1}; \
python3 ../Fused-Block-CNN/address/golden_2block_fused/extract_ofm_tile_1x1_1.py --pe 4 --ofm_channel \$5 --ofm_height \${ofm_h2}; \
python3 ../Fused-Block-CNN/address/golden_2block_fused/extract_ofm_tile_3x3_2.py --pe 16 --ofm_channel \$6 --ofm_height \${ofm_h3}; \
ofm_h4=\${ofm_h3}; \
python3 ../Fused-Block-CNN/address/golden_2block_fused/extract_ofm_tile_1x1_2.py --pe 4 --ofm_channel \$7 --ofm_height \${ofm_h4}; \
\
python3 ../Fused-Block-CNN/address/golden_2block_fused/global_ram.py
python3 ../Fused-Block-CNN/address/golden_2block_fused/change_ofm_3x3_1.py --ofm_width \${ofm_h1} --max_pe 16 --weight_filter \$4; \
python3 ../Fused-Block-CNN/address/golden_2block_fused/change_ofm_1x1_1.py --ofm_width \${ofm_h2} --max_pe 4 --weight_filter \$5; \
python3 ../Fused-Block-CNN/address/golden_2block_fused/change_ofm_3x3_2.py --ofm_width \${ofm_h3} --max_pe 16 --weight_filter \$6; \
python3 ../Fused-Block-CNN/address/golden_2block_fused/change_ofm_1x1_2.py --ofm_width \${ofm_h4} --max_pe 4 --weight_filter \$7" --'


alias py_run_dw_10='bash -c "\
python3 ../Fused-Block-CNN/address/gen_random_ifm_weight.py \
  --ifm_height \$1 --ifm_width \$2 --ifm_channel \$3 \
  --weight_height \$4 --weight_width \$5 --weight_filter \$6 --padding \$7; \

python3 ../Fused-Block-CNN/address/gen_tf_dw.py \
  --ifm_height \$1 --ifm_width \$2 --ifm_channel \$3 \
  --weight_height \$4 --weight_width \$5 --depth_multiplier \$6 \
  --padding \$7 --stride \$8; \

python3 ../Fused-Block-CNN/address/extract_weight_tile_dw.py \
  --pe 4 --filter_count \$6 --weight_height \$4 --weight_channel \$3; \

ofm_h=\$(( (\$1 - \$4 + 2 * \$7) / \$8 + 1 ))
python3 ../Fused-Block-CNN/address/extract_ofm_tile.py \
  --pe 4 --ofm_channel \$3 --ofm_height \${ofm_h}; \
python3 ../Fused-Block-CNN/address/change_ofm.py --ofm_width \$(( (\$2 - \$5 + 2 * \$7) / \$8 + 1 )) --max_pe 4 --weight_filter \$3" --'

###############################################################################
# Các alias run_tbX với tham số từ Python và override testbench:
# Các override ở đây bao gồm:
#   +INPUT_SIZE, +KERNEL_SIZE, +STRIDE, +CHANNEL_NUM, +FILTER_NUM, +PADDING
# (Ở Verilog, parameter PADDING được định nghĩa và có thể override qua dòng lệnh)
###############################################################################
alias run_tb1='python3 ../sw/code_gen/auto_gen_ifm_weight_bram_golden_output.py --ifm_shape 224x224x3 --kernel_shape 7x7x3x64 --stride 2x2 --padding 3; \
vlb; vlg; \
vsim -64 -c ${TOP_TB} -wlf vsim.wlf \
+INPUT_SIZE=224 +KERNEL_SIZE=7 +STRIDE=2 \
+CHANNEL_NUM=3 +FILTER_NUM=64 +PADDING=3 \
-solvefaildebug -assertdebug -sva -coverage -voptargs=+acc -l ./log/vsim.log \
-do "coverage save -onexit -assert -code bcefs -directive -cvg coverage.ucdb; add wave -r /${TOP_TB}/*; run -all; quit"; \
source_compare_file'

alias py_run_full_fused='bash -c "\
python3 ../Fused-Block-CNN/address/golden_full_fused/gen_random_ifm_weight_2layer.py --ifm_height \$1 --ifm_width \$2 --ifm_channel \$3 --weight_filter_1 \$4 --weight_filter_2 \$5 --weight_filter_3 \$6 --weight_filter_4 \$7 --weight_filter_5 \$8 --weight_filter_6 \$9 --weight_filter_7 \${10} --weight_filter_8 \${11}; \
python3 ../Fused-Block-CNN/address/golden_full_fused/gen_tf_layer_01.py --ifm_height \$1 --ifm_width \$2 --ifm_channel \$3 --weight_filter 32; \
ofm_h01=\$(( (\$1 - 3 + 2 * 1) / 2 + 1 )); \
python3 ../Fused-Block-CNN/address/golden_full_fused/process_stride_2_01.py --weight_filter 32 --ofm_width \$(( (\$1 - 3 + 2 * 1) / 1 + 1 )); \
python3 ../Fused-Block-CNN/address/golden_full_fused/gen_tf_layer_02.py --ifm_height \${ofm_h01} --ifm_width \${ofm_h01} --ifm_channel 32 --weight_filter 16; \
ofm_h02=\$(( (\${ofm_h01} - 3 + 2 * 1) / 1 + 1 )); \
python3 ../Fused-Block-CNN/address/golden_full_fused/gen_tf_layer_1.py --ifm_height \${ofm_h02} --ifm_width \${ofm_h02} --ifm_channel 16 --weight_filter \$4; \
ofm_h1=\$(( (\${ofm_h02} - 3 + 2 * 1) / 2 + 1 )); \
python3 ../Fused-Block-CNN/address/golden_full_fused/process_stride_2.py --weight_filter \$4 --ofm_width \$(( (\${ofm_h02} - 3 + 2 * 1) / 1 + 1 )); \
python3 ../Fused-Block-CNN/address/golden_full_fused/gen_tf_layer_2.py --ifm_height \${ofm_h1} --ifm_width \${ofm_h1} --ifm_channel \$4 --weight_filter \$5; \
ofm_h2=\${ofm_h1}; \
python3 ../Fused-Block-CNN/address/golden_full_fused/gen_tf_layer_3.py --ifm_height \${ofm_h2} --ifm_width \${ofm_h2} --ifm_channel \$5 --weight_filter \$6; \
ofm_h3=\$(( (\${ofm_h2} - 3 + 2 * 1) / 1 + 1 )); \
python3 ../Fused-Block-CNN/address/golden_full_fused/gen_tf_layer_4.py --ifm_height \${ofm_h3} --ifm_width \${ofm_h3} --ifm_channel \$6 --weight_filter \$7; \
ofm_h4=\${ofm_h3}; \
python3 ../Fused-Block-CNN/address/golden_full_fused/add_layer2,4.py; \
python3 ../Fused-Block-CNN/address/golden_full_fused/gen_tf_layer_5.py --ifm_height \${ofm_h4} --ifm_width \${ofm_h4} --ifm_channel \$7 --weight_filter \$8; \
ofm_h5=\$(( (\${ofm_h4} - 3 + 2 * 1) / 2 + 1 )); \
python3 ../Fused-Block-CNN/address/golden_full_fused/process_stride_2_1.py --weight_filter \$8 --ofm_width \$(( (\${ofm_h4} - 3 + 2 * 1) / 1 + 1 )); \
python3 ../Fused-Block-CNN/address/golden_full_fused/gen_tf_layer_6.py --ifm_height \${ofm_h5} --ifm_width \${ofm_h5} --ifm_channel \$8 --weight_filter \$9; \
ofm_h6=\${ofm_h5}; \
python3 ../Fused-Block-CNN/address/golden_full_fused/gen_tf_layer_7.py --ifm_height \${ofm_h6} --ifm_width \${ofm_h6} --ifm_channel \$9 --weight_filter \${10}; \
ofm_h7=\$(( (\${ofm_h6} - 3 + 2 * 1) / 1 + 1 )); \
python3 ../Fused-Block-CNN/address/golden_full_fused/gen_tf_layer_8.py --ifm_height \${ofm_h7} --ifm_width \${ofm_h7} --ifm_channel \${10} --weight_filter \${11}; \
ofm_h8=\${ofm_h7}; \
python3 ../Fused-Block-CNN/address/golden_full_fused/add_layer6,8.py; \
\python3 ../Fused-Block-CNN/address/golden_full_fused/extract_weight_tile_layer_01.py --pe 16 --filter_count 32 --weight_channel 16; \
python3 ../Fused-Block-CNN/address/golden_full_fused/extract_weight_tile_layer_02.py --pe 16 --filter_count 16 --weight_channel 32; \
python3 ../Fused-Block-CNN/address/golden_full_fused/extract_weight_tile_layer_1.py --pe 16 --filter_count \$4 --weight_channel 16; \
python3 ../Fused-Block-CNN/address/golden_full_fused/extract_weight_tile_layer_2.py --pe 4 --filter_count \$5 --weight_channel \$4; \
python3 ../Fused-Block-CNN/address/golden_full_fused/extract_weight_tile_layer_3.py --pe 16 --filter_count \$6 --weight_channel \$5; \
python3 ../Fused-Block-CNN/address/golden_full_fused/extract_weight_tile_layer_4.py --pe 4 --filter_count \$7 --weight_channel \$6; \
python3 ../Fused-Block-CNN/address/golden_full_fused/extract_weight_tile_layer_5.py --pe 16 --filter_count \$8 --weight_channel \$7; \
python3 ../Fused-Block-CNN/address/golden_full_fused/extract_weight_tile_layer_6.py --pe 4 --filter_count \$9 --weight_channel \$8; \
python3 ../Fused-Block-CNN/address/golden_full_fused/extract_weight_tile_layer_7.py --pe 16 --filter_count \${10} --weight_channel \$9; \
python3 ../Fused-Block-CNN/address/golden_full_fused/extract_weight_tile_layer_8.py --pe 4 --filter_count \${11} --weight_channel \${10}; \
\
python3 ../Fused-Block-CNN/address/golden_full_fused/extract_ofm_tile_layer_01.py --pe 16 --ofm_channel 32 --ofm_height \${ofm_h01}; \
python3 ../Fused-Block-CNN/address/golden_full_fused/extract_ofm_tile_layer_02.py --pe 16 --ofm_channel 16 --ofm_height \${ofm_h02}; \
python3 ../Fused-Block-CNN/address/golden_full_fused/extract_ofm_tile_layer_1.py --pe 16 --ofm_channel \$4 --ofm_height \${ofm_h1}; \
python3 ../Fused-Block-CNN/address/golden_full_fused/extract_ofm_tile_layer_2.py --pe 4 --ofm_channel \$5 --ofm_height \${ofm_h2}; \
python3 ../Fused-Block-CNN/address/golden_full_fused/extract_ofm_tile_layer_3.py --pe 16 --ofm_channel \$6 --ofm_height \${ofm_h3}; \
python3 ../Fused-Block-CNN/address/golden_full_fused/extract_ofm_tile_layer_4.py --pe 4 --ofm_channel \$7 --ofm_height \${ofm_h4}; \
python3 ../Fused-Block-CNN/address/golden_full_fused/extract_ofm_tile_layer_4_add.py --pe 16 --ofm_channel \$7 --ofm_height \${ofm_h4}; \
python3 ../Fused-Block-CNN/address/golden_full_fused/extract_ofm_tile_layer_5.py --pe 16 --ofm_channel \$8 --ofm_height \${ofm_h5}; \
python3 ../Fused-Block-CNN/address/golden_full_fused/extract_ofm_tile_layer_6.py --pe 4 --ofm_channel \$9 --ofm_height \${ofm_h6}; \
python3 ../Fused-Block-CNN/address/golden_full_fused/extract_ofm_tile_layer_7.py --pe 16 --ofm_channel \${10} --ofm_height \${ofm_h7}; \
python3 ../Fused-Block-CNN/address/golden_full_fused/extract_ofm_tile_layer_8.py --pe 4 --ofm_channel \${11} --ofm_height \${ofm_h8}; \
python3 ../Fused-Block-CNN/address/golden_full_fused/extract_ofm_tile_layer_8_add.py --pe 16 --ofm_channel \${11} --ofm_height \${ofm_h8}; \
\python3 ../Fused-Block-CNN/address/golden_full_fused/Add_padding.py --ifm_height \$1 --ifm_width \$2 --ifm_channel \$3 --padding 1; \
python3 ../Fused-Block-CNN/address/golden_full_fused/global_ram.py; \
python3 ../Fused-Block-CNN/address/golden_full_fused/change_ofm_layer_01.py --ofm_width \${ofm_h01} --max_pe 16 --weight_filter 32; \
python3 ../Fused-Block-CNN/address/golden_full_fused/change_ofm_layer_02.py --ofm_width \${ofm_h02} --max_pe 16 --weight_filter 16; \
python3 ../Fused-Block-CNN/address/golden_full_fused/change_ofm_layer_1.py --ofm_width \${ofm_h1} --max_pe 16 --weight_filter \$4; \
python3 ../Fused-Block-CNN/address/golden_full_fused/change_ofm_layer_2.py --ofm_width \${ofm_h2} --max_pe 4 --weight_filter \$5; \
python3 ../Fused-Block-CNN/address/golden_full_fused/change_ofm_layer_3.py --ofm_width \${ofm_h3} --max_pe 16 --weight_filter \$6; \
python3 ../Fused-Block-CNN/address/golden_full_fused/change_ofm_layer_4.py --ofm_width \${ofm_h4} --max_pe 4 --weight_filter \$7; \
python3 ../Fused-Block-CNN/address/golden_full_fused/change_ofm_layer_4_add.py --ofm_width \${ofm_h4} --max_pe 16 --weight_filter \$7; \
python3 ../Fused-Block-CNN/address/golden_full_fused/change_ofm_layer_5.py --ofm_width \${ofm_h5} --max_pe 16 --weight_filter \$8; \
python3 ../Fused-Block-CNN/address/golden_full_fused/change_ofm_layer_6.py --ofm_width \${ofm_h6} --max_pe 4 --weight_filter \$9; \
python3 ../Fused-Block-CNN/address/golden_full_fused/change_ofm_layer_7.py --ofm_width \${ofm_h7} --max_pe 16 --weight_filter \${10}; \
python3 ../Fused-Block-CNN/address/golden_full_fused/change_ofm_layer_8.py --ofm_width \${ofm_h8} --max_pe 4 --weight_filter \${11}; \
python3 ../Fused-Block-CNN/address/golden_full_fused/change_ofm_layer_8_add.py --ofm_width \${ofm_h8} --max_pe 16 --weight_filter \${11}" --'

alias fused_new='bash -c "\
python3 ../Fused-Block-CNN/address/golden_full_fused_new/gen_random_ifm_weight_2layer.py \
  --ifm_height \$1 --ifm_width \$2 --ifm_channel \$3 \
  --filters \$4 \$5 \$6 \$7 \$8 \$9 \${10} \${11}; \
\
python3 ../Fused-Block-CNN/address/golden_full_fused_new/golden_output_fused.py \
  --ifm_height \$1 --ifm_width \$2 --ifm_channel \$3 \
  --filters \$4 \$5 \$6 \$7 \$8 \$9 \${10} \${11}" --'
